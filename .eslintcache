[{"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/index.js":"1","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/App.tsx":"2","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Navbar.tsx":"3","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/reportWebVitals.js":"4","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchBar.tsx":"5","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Search.tsx":"6","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Home.tsx":"7","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchResults.tsx":"8","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Routes.tsx":"9","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/ArtistDetails.tsx":"10","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchTest.tsx":"11","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Sidebar.tsx":"12"},{"size":595,"mtime":1609954581900,"results":"13","hashOfConfig":"14"},{"size":699,"mtime":1613334996557,"results":"15","hashOfConfig":"14"},{"size":1018,"mtime":1610473004556,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1609619748799,"results":"17","hashOfConfig":"14"},{"size":1638,"mtime":1613855943022,"results":"18","hashOfConfig":"14"},{"size":3223,"mtime":1613856960651,"results":"19","hashOfConfig":"14"},{"size":191,"mtime":1609877780360,"results":"20","hashOfConfig":"14"},{"size":564,"mtime":1613857157592,"results":"21","hashOfConfig":"14"},{"size":501,"mtime":1610064783779,"results":"22","hashOfConfig":"14"},{"size":705,"mtime":1610321482265,"results":"23","hashOfConfig":"14"},{"size":2991,"mtime":1610321800636,"results":"24","hashOfConfig":"14"},{"size":338,"mtime":1610322647898,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wfhvk0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/index.js",[],["60","61"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/App.tsx",[],["62","63"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Navbar.tsx",[],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/reportWebVitals.js",[],["64","65"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchBar.tsx",["66"],"import React, {useState, useRef} from 'react';\n\ninterface Props {\n  handleSubmit: (searchVal: string) => void\n  typedVal: string\n};\n\nconst SearchBar: React.FC<Props> = ({handleSubmit, typedVal}) => {\n  const [searchVal, setSearchVal] = useState(typedVal);\n  const inputRef = React.useRef(\"\");\n  const timeoutId = useRef<number | null>();\n\n  React.useEffect(() => {\n    // if the user keeps typing, stop the API call!\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n    // don't make an API call with no data\n    if (!searchVal.trim()) return\n    // capture the timeoutId so we can\n    // stop the call if the user keeps typing\n    timeoutId.current = window.setTimeout(() => {\n    // make graphql call      \n      handleSubmit(searchVal)\n    }, 800)\n  }, [searchVal])\n\n\n  function handleChange(e: React.FormEvent<HTMLInputElement>) {\n    const target = e.target as HTMLTextAreaElement;    \n    setSearchVal(target.value);\n    // mimic the value so we can access\n    // the latest value in our API call\n    inputRef.current = target.value\n  }\n\n  return (\n    <div className=\"Search-Field\">\n      <div className=\"Search-Field-Content\">\n      <h1 className=\"\">Search for your Artist/Band!</h1>\n      <form className=\"Search-Input-Container\" onSubmit={e => { e.preventDefault(); }}>\n      <div >\n        <input\n          type=\"text\"\n          id=\"SearchVal\"\n          name=\"searchVal\"\n          className=\"\"\n          value={searchVal}\n          onChange={handleChange}\n        />\n      </div>\n      </form>\n      </div>\n      <div className=\"Search-Field-Filler\"></div>\n    </div>\n  );\n};\n\nexport default SearchBar;","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Search.tsx",["67"],"import React, {useState} from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResults from \"./SearchResults\";\n\n//QUERY TYPE TO PASS TO GRAPHQL\n// interface QueryData {\n//   search: {\n//     artists: {\n//       nodes: [\n//         obj: {\n//           name: string\n//            works: {\n//             nodes: [\n//               obj: {\n//                 title: string\n//               }\n//             ]\n//           }\n//         }\n//       ]\n//     }\n//   }\n// };\n\n// interface QueryData {\n//   launchesPast: {\n//     launch_date_local: string\n//     launch_year: string\n//   }\n// };\n\ninterface QueryData {\n  launchesPast: {\n    mission_name: string\n    links: {\n      article_link: string\n      video_link: string\n    }\n    rocket: {\n      rocket_name: string\n    }\n    launch_year: string\n  }\n  payload: {\n    id: string\n  }\n};\n\n// interface QueryData {\n//   launchesPast {\n//     mission_name: string\n//     links {\n//       article_link: string\n//       video_link: string\n//     }\n//     rocket {\n//       rocket_name: string\n//     }\n//     launch_year: string\n//   }\n//   payload(id: \"\") {\n//     id: string\n//   }\n// }\n\n\n//SEARCH COMPONENT\nconst Search: React.FC  = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let results : any;\n\n  // let query = gql`\n  //   query Artist($artist: String!) {\n  //     search {\n  //       artists(query: $artist) {\n  //         nodes {\n  //           name\n  //           works {\n  //             nodes {\n  //               title\n  //             }\n  //           }\n  //         }\n  //       }\n  //     }\n  //   }\n  // `;\n\nlet query = gql`\nquery MyLaunches($launch_year: String!) {\n  launchesPast(find: {launch_year: $launch_year}) {\n    mission_name\n    links {\n      article_link\n      video_link\n    }\n    rocket {\n      rocket_name\n    }\n    launch_year\n  }\n  payload(id: \"\") {\n    id\n  }\n}\n`\n//     let query = gql`\n// {\n//   launchesPast(limit: 10) {\n//     launch_date_local\n//     launch_year\n//   }\n// }\n// `;\n\n  //HANDLE SUBMIT FUNCTION FOR SEARCH BAR\n  const handleSubmit = (searchVal: string) => {\n    console.log(\"This is searchVal: \", searchVal.toString());\n    setSearchQuery(searchVal.toString());\n  };\n\n  //PASSING THE QUERY TO GRAPHQL\n  // const {data, loading, error} = useQuery<QueryData>(query, {\n  //   variables: { \"launch_year\": searchQuery },\n  // });\n\n  \n  const {data, loading, error} = useQuery<QueryData>(query, {\n    variables: { \"launch_year\": searchQuery },\n  });\n\n\n  // const {data, loading, error} = useQuery<QueryData>(query);\n\n  if (data) {\n    console.log(\"this is my data\", data);\n    results = data;\n  };\n\n  if (error && searchQuery !== \"\") {\n    console.log(\"There was an error\", error);\n    results = [{launchesPast:\"There was an error making a request for that Artist.\"}];\n  } else if (error && searchQuery === \"\") {\n    console.log(\"There was an error / search field empty\", error);\n    results = [{launchesPast: \"empty\"}];\n  };\n\n  return (\n    <>\n    <SearchBar handleSubmit={handleSubmit} typedVal={searchQuery}/>\n    {results && <SearchResults results={results} searchQuery={searchQuery}/>}\n    </>\n  );\n};\n\n\nexport default Search","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Home.tsx",["68"],"import React, {useState} from \"react\";\nimport Search from \"./Search\";\n\n\n//HOME COMPONENT\nconst Home: React.FC  = () => {\n\n  return (\n    <>\n    <Search />\n    </>\n  );\n};\n\nexport default Home",["69","70"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchResults.tsx",[],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Routes.tsx",[],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/ArtistDetails.tsx",[],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchTest.tsx",[],["71","72"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Sidebar.tsx",["73","74","75"],"import React, {useState, useRef} from 'react';\n\ninterface Props {\n  expand: boolean\n};\n\nconst Sidebar: React.FC<Props> = ({expand}) => {\n\n\nlet sidebarWidth : string;\n\nif (expand) {\n  sidebarWidth = \"200px\";\n} else {\n  sidebarWidth = \"0px\";\n}\n\n  return (\n    <div className=\"Sidebar-Container\">\n\n    </div>\n  );\n};\n\nexport default Sidebar;",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"80","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":26,"column":6,"nodeType":"88","endLine":26,"endColumn":17,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":130,"column":16,"nodeType":"92","messageId":"93","endLine":130,"endColumn":23},{"ruleId":"90","severity":1,"message":"94","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"84"},{"ruleId":"80","replacedBy":"85"},{"ruleId":"90","severity":1,"message":"94","line":1,"column":16,"nodeType":"92","messageId":"93","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"95","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":32},{"ruleId":"90","severity":1,"message":"96","line":15,"column":3,"nodeType":"92","messageId":"93","endLine":15,"endColumn":15},{"ruleId":"78","replacedBy":"97"},{"ruleId":"80","replacedBy":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],["99"],["100"],["99"],["100"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array. If 'handleSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["101"],"@typescript-eslint/no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useRef' is defined but never used.","'sidebarWidth' is assigned a value but never used.",["99"],["100"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},"Update the dependencies array to be: [handleSubmit, searchVal]",{"range":"104","text":"105"},[781,792],"[handleSubmit, searchVal]"]