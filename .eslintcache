[{"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/index.js":"1","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/App.tsx":"2","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Navbar.tsx":"3","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/reportWebVitals.js":"4","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchResults.tsx":"5","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchBar.tsx":"6","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Home.tsx":"7"},{"size":504,"mtime":1609622893900,"results":"8","hashOfConfig":"9"},{"size":534,"mtime":1609797812364,"results":"10","hashOfConfig":"9"},{"size":513,"mtime":1609624173267,"results":"11","hashOfConfig":"9"},{"size":362,"mtime":1609619748799,"results":"12","hashOfConfig":"9"},{"size":1542,"mtime":1609644001879,"results":"13","hashOfConfig":"9"},{"size":2275,"mtime":1609870261013,"results":"14","hashOfConfig":"9"},{"size":1692,"mtime":1609806323609,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"wfhvk0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/index.js",[],["36","37"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/App.tsx",["38","39","40"],"import React from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider} from \"react-apollo\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./Navbar\";\nimport SearchResults from \"./SearchResults\";\nimport Home from \"./Home\";\n\nconst client = new ApolloClient({\n  uri: \"https://graphbrainz.herokuapp.com/\"\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      {/* <Navbar /> */}\n      {/* <SearchResults /> */}\n      <Home />\n\n</ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Navbar.tsx",[],["41","42"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/reportWebVitals.js",[],["43","44"],"/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchResults.tsx",["45"],"import React from \"react\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\ninterface QueryData {\n  search: {\n    artists: {\n      nodes: [\n        obj: {\n          name: string\n          discogs: {\n            images: [\n              obj: {\n                url: string\n              }\n            ]\n          }\n          works: {\n            nodes: [\n              obj: {\n                title: string\n              }\n            ]\n          }\n        }\n      ]\n    }\n  }\n}\n\nconst query = gql`\n  {\n     search {\n      artists(query: \"Bob Dylan\") {\n        nodes {\n          name\n          discogs {\n            images {\n              url\n            }\n          }\n          works {\n            nodes {\n              title\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst SearchResults: React.FC  = () => {\n const {data, loading, error} = useQuery<QueryData>(query);\n\n let results;\n\n  if (data) {\n    console.log(\"this is my data\", data.search.artists.nodes);\n    results = data.search.artists.nodes;\n    console.log(\"this is artists name\", results[0].name);\n    \n  }\n \n\n if (loading) return <p>Loading ...</p>;\n if (error) {\n   console.log(error);\n   return <p>Error</p>\n\n }\n\n return (\n   <>\n   <p className=\"artistResults\">Results:</p>\n    <div>\n      {results && <img src={results[0].discogs.images[0].url}/>}\n      {results && <p>{results[0].name}</p>}\n      {results && <div>{results[0].works.nodes.map(item => <p>{item.title}</p>)}</div>}\n    </div>\n   </>\n )\n\n}\n\n\nexport default SearchResults","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/SearchBar.tsx",["46"],"import React, {useState, useRef} from 'react';\n\ninterface Props {\n  handleSubmit: (searchVal: string) => void\n  typedVal: string\n}\n\n\nconst SearchBar: React.FC<Props> = ({handleSubmit, typedVal}) => {\n  const [searchVal, setSearchVal] = useState(typedVal);\n  const inputRef = React.useRef(\"\")\n  const timeoutId = useRef<number | null>();\n\n\n  React.useEffect(() => {\n    // if the user keeps typing, stop the API call!\n    if (timeoutId.current) {\n      clearTimeout(timeoutId.current);\n    }\n    // don't make an API call with no data\n    if (!searchVal.trim()) return\n    // capture the timeoutId so we can\n    // stop the call if the user keeps typing\n    timeoutId.current = window.setTimeout(() => {\n    // make graphql call\n      handleSubmit(searchVal)\n    }, 800)\n  }, [searchVal])\n\n\n  function handleChange(e: React.FormEvent<HTMLInputElement>) {\n    const target = e.target as HTMLTextAreaElement;\n    setSearchVal(target.value);\n    // mimic the value so we can access\n    // the latest value in our API call\n    inputRef.current = target.value\n  }\n\n\n  // const triggerSubmit = (e: React.MouseEvent<HTMLElement>) => {\n  //   e.preventDefault();\n  //   handleSubmit(searchVal);\n  // };\n\n  // const triggerSubmit = (e: React.KeyboardEvent<HTMLInputElement>) => {\n  //   e.preventDefault();\n  //   handleSubmit(searchVal);\n  // };\n\n  // const handleChange = (e: React.FormEvent<HTMLInputElement>) => {\n  //   const target = e.target as HTMLTextAreaElement;\n  //   setSearchVal(target.value);\n  //   handleSubmit(searchVal);\n  // };\n\n  return (\n    <div className=\"Search-Field\">\n      <div className=\"Search-Field-Content\">\n      <h1 className=\"\">Search for your Artist/Band!</h1>\n      <form className=\"Search-Input-Container\" >\n      <div >\n        <input\n          type=\"text\"\n          id=\"SearchVal\"\n          name=\"searchVal\"\n          className=\"\"\n          value={searchVal}\n          onChange={handleChange}\n          // onKeyUp={triggerSubmit}\n        />\n        <button  type=\"submit\">\n            Submit\n        </button>\n        {/* <button onClick={triggerSubmit} type=\"submit\">\n            Submit\n        </button> */}\n      </div>\n      </form>\n      </div>\n      <div className=\"Search-Field-Filler\"></div>\n    </div>\n  );\n};\n\nexport default SearchBar;","/Users/Louieg3/Documents/WEB DEVELOPMENT/interview_projects/swapcard_music/frontend/src/Home.tsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":6,"column":8,"nodeType":"53","messageId":"54","endLine":6,"endColumn":14},{"ruleId":"51","severity":1,"message":"56","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":21},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"57"},{"ruleId":"49","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":77,"column":19,"nodeType":"61","endLine":77,"endColumn":64},{"ruleId":"62","severity":1,"message":"63","line":28,"column":6,"nodeType":"64","endLine":28,"endColumn":17,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'SearchResults' is defined but never used.",["66"],["67"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array. If 'handleSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [handleSubmit, searchVal]",{"range":"71","text":"72"},[775,786],"[handleSubmit, searchVal]"]